# This recipe creates 3 packages
# libopencv, py-opencv, opencv
#
# libopencv actually contains all the files, including the site-packages
# file needed to run opencv with python.
#     opencv-dnn seems to change on every patch version, therefore, we pin
#     to the patch version x.x.x
#
# py-opencv is a meta package that constrains the python dependencies
#     This one is pinned to the minor version. x.x
#
# opencv is a backward compatible package, with no pinnings
#
# This approach is different than the one in defaults. Default's package
# seperates well the files generated with python dependencies, from those
# generated without. Unfortunately, this isn't entirely supported by
# upstream. Their hacks are quite elaborate, making it seem difficult to
# maintain as opencv has been changing their build system recently.
#
# By putting all the generated files in 1 package, this makes the build process
# much easier, at the expense of a few MBs in the 'lib' package.
{% set version = "4.1.1" %}

package:
  name: libopencv
  version: {{ version }}

source:
  - url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz
    fn: opencv-{{ version }}.tar.gz
    sha256: 5de5d96bdfb9dad6e6061d70f47a0a91cee96bb35afb9afb9ecb3d43e243d217
    patches:
        - 0001-cmake-download-tries-customizable-download-parameter.patch
        - 0001-Fix-for-building-with-old-V4L.patch
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: 9f85d380758498d800fec26307e389620cde8b1a2e86ab51cddc5200fbe37102
    folder: opencv_contrib

build:
  number: 4
  # Python2.7 support dropped: https://github.com/opencv/opencv/issues/8481
  skip: true  # [win and py27]
  run_exports:
    # https://abi-laboratory.pro/index.php?view=timeline&l=opencv
    # Things seem to change every patch versions, mostly the dnn module
    - {{ pin_subpackage('libopencv', max_pin='x.x.x') }}

requirements:
  build:
    # Required to find ffpmeg
    - pkg-config                     # [not win]
    - m2-patch                       # [win]
    - cmake
    - ninja
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libselinux') }}        # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxfixes') }}         # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
  host:
    - python
    - numpy
    - hdf5                           # [unix]
    - eigen 3.3.*
    - jasper                         # [unix]
    - zlib
    - jpeg
    - libtiff
    - libwebp
    - harfbuzz                       # [unix]
    - libpng
    - ffmpeg                         # [not win]
    - qt 5.12.1                      # [not osx]
    - liblapacke
    - freetype
  run:
    # Don't depend on python in the run section
    # py-opencv will depend on python
    - hdf5                           # [unix]
    - jasper                         # [unix]
    - zlib
    - jpeg
    - libwebp
    - harfbuzz                       # [unix]
    - libtiff
    - libpng
    - ffmpeg                         # [not win]
    - qt  5.12                       # [not osx]
    # https://github.com/conda-forge/opencv-feedstock/issues/174
    # Seems like the OSX ABI has changed between 2.9 and 2.10???
    # That or a dependency wasn't merged in
    # Since we don't know the cause, we are choosing this pinning on all platforms.
    - {{ pin_compatible('freetype', min_pin='x.x') }}

test:
    requires:
      - {{ compiler('c') }}
      - {{ compiler('cxx') }}
      - {{ cdt('mesa-libgl-devel') }}   # [linux]
      - {{ cdt('mesa-libegl-devel') }}  # [linux] 
      - pkg-config                    # [not win]
      # Test with the two currently supported lapack implementatons
      # One test done on different versions of python on each platform
      - liblapack * *openblas         # [py==36]
      - liblapack * *mkl              # [py==37]
      - cmake
      - ninja
      - qt 5.12.1   # [not osx]
    files:
      - CMakeLists.txt
      - test.cpp
    commands:
        # Verify dynamic libraries on all systems
        {% set win_ver_lib = version|replace(".", "") %}
        {% set opencv_libs = [
            "aruco",
            "bgsegm",
            "calib3d",
            "ccalib",
            "core",
            "datasets",
            "dnn",
            "dpm",
            "face",
            "features2d",
            "flann",
            "fuzzy",
            "highgui",
            "imgcodecs",
            "imgproc",
            "line_descriptor",
            "ml",
            "objdetect",
            "optflow",
            "phase_unwrapping",
            "photo",
            "plot",
            "reg",
            "rgbd",
            "saliency",
            "shape",
            "stereo",
            "stitching",
            "structured_light",
            "superres",
            "surface_matching",
            "text",
            "tracking",
            "video",
            "videoio",
            "videostab",
            "xfeatures2d",
            "ximgproc",
            "xobjdetect",
            "xphoto"
        ] %}
        - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}       # [osx]
        - export CONDA_BUILD_SYSROOT={{ CONDA_BUILD_SYSROOT }}                 # [osx]
        - OPENCV_FLAGS=`pkg-config --cflags opencv4`  # [unix]
        - $CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test   # [unix]
        - if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi                # [unix]
        {% for each_opencv_lib in opencv_libs %}
        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}${SHLIB_EXT}                  # [unix]
        - if not exist %PREFIX%\\Library\\bin\\opencv_{{ each_opencv_lib }}{{ win_ver_lib }}.dll exit 1  # [win]
        {% endfor %}
        - test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}  # [unix]
        - test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}          # [unix]
        - test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}     # [unix]
        - mkdir -p cmake_build_test && pushd cmake_build_test
        - cmake -G "Ninja" ..
        - cmake --build . --config Release
        - popd

outputs:
  - name: libopencv
  - name: opencv
    requirements:
      run:
        - {{ pin_subpackage('libopencv', exact=True) }}
        - {{ pin_subpackage('py-opencv', exact=True) }}

  - name: py-opencv
    build:
      run_exports:
        # Should we even have this???
        # don't pin the python version so hard.
        # Actually, I have found pretty good compatibility in the python
        # package
        - {{ pin_subpackage('py-opencv') }}
    requirements:
      # There is no build script, but I just want it to think
      # that it needs python and numpy at build time
      host:
        - python
        - numpy
      run:
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('libopencv', exact=True) }}
    test:
      requires:
        - requests
        - certifi
        # Test with the two currently supported lapack implementatons
        # One test done on different versions of python on each platform
        - liblapack * *openblas         # [py==36]
        - liblapack * *mkl              # [py==37]
      imports:
        - cv2
        - cv2.xfeatures2d
      files:
        - run_py_test.py
      commands:
        - python run_py_test.py
        - if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi  # [unix]
        - python -c "import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)"  # [linux]
        - python -c "import cv2, re; assert re.search('Lapack:\s+YES', cv2.getBuildInformation())"


about:
  home: http://opencv.org/
  license: BSD 3-clause
  summary: Computer vision and machine learning software library.
  license_file: LICENSE

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - patricksnape
    - zym1010
    - hajapy
    - ocefpaf
    - hmaarrfk
