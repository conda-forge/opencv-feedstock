# This recipe creates 3 packages
# libopencv, py-opencv, opencv
#
# libopencv actually contains all the files, including the site-packages
# file needed to run opencv with python.
#     opencv-dnn seems to change on every patch version, therefore, we pin
#     to the patch version x.x.x
#
# py-opencv is a meta package that constrains the python dependencies
#     This one is pinned to the minor version. x.x
#
# opencv is a backward compatible package, with no pinnings
#
# This approach is different than the one in defaults. Default's package
# seperates well the files generated with python dependencies, from those
# generated without. Unfortunately, this isn't entirely supported by
# upstream. Their hacks are quite elaborate, making it seem difficult to
# maintain as opencv has been changing their build system recently.
#
# By putting all the generated files in 1 package, this makes the build process
# much easier, at the expense of a few MBs in the 'lib' package.
{% set version = "4.7.0" %}
{% set major_version = version.split('.')[0] %}
{% set PY_VER_MAJOR = PY_VER.split('.')[0] %}
{% set PY_VER_MINOR = PY_VER.split('.')[1] %}

package:
  name: opencv-split
  version: {{ version }}

source:
  - url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz
    fn: opencv-{{ version }}.tar.gz
    sha256: 8df0079cdbe179748a18d44731af62a245a45ebf5085223dc03133954c662973
    patches:
      # backport https://github.com/opencv/opencv/pull/21611 (unmerged as of 06/2023)
      - patches_opencv/0001-Add-installation-of-pip-metadata-from-cmake.patch
      - patches_opencv/0002-delete-lines-that-download-opencv.patch
      - patches_opencv/0003-find-pkgconfig-on-windows.patch
      - patches_opencv/0004-fix-detection-for-protobuf-23.x.patch
      # needed to read config for python standalone build from global build step
      # - patches_opencv/0005-point-to-build-cache-for-opencv_python_config.cmake.patch
      - patches_opencv/0005-debug-__python_binary_install_path.patch
      - patches_opencv/0006-include-OpenCVModule.cmake.patch
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: 42df840cf9055e59d0e22c249cfb19f04743e1bdad113d31b1573d3934d62584
    folder: opencv_contrib
    patches:
      # Allow attempt to find HDF5 on cross-compile
      - patches_opencv_contrib/cmake_hdf5_xpile.patch
  - fn: test.avi
    url: https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi
    sha256: 78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310

build:
  number: 5
  string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  run_exports:
    # https://abi-laboratory.pro/index.php?view=timeline&l=opencv
    # Things seem to change every patch versions, mostly the dnn module
    - {{ pin_subpackage('libopencv', max_pin='x.x.x') }}

requirements:
  build:
    - libprotobuf                            # [build_platform != target_platform]
    # pkg-config is required to find ffpmeg
    - pkg-config
    - cmake
    - ninja
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 2.17  # [linux64]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-libegl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libselinux') }}        # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxfixes') }}         # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
  host:
    - eigen
    # Specify lgpl version of ffmpeg so that there are
    # no quesitons about the license of the resulting opencv
    # binary
    - ffmpeg {{ ffmpeg }}=lgpl_*
    - freetype
    - gflags
    - glib                           # [unix]
    - glog
    - harfbuzz
    - hdf5
    - jasper
    - libcblas
    - libgomp                        # [linux]
    - libiconv                       # [unix]
    - libjpeg-turbo
    - liblapack
    - liblapacke
    - libpng
    - libprotobuf
    - libtiff
    - libwebp
    # ICE when enabling this
    # - llvm-openmp                    # [osx]
    - qt-main                        # [not osx and not ppc64le]
    - zlib

outputs:
  - name: libopencv
    script: install-lib.sh   # [unix]
    script: install-lib.bat  # [win]
    requirements:
      build:
        - cmake
        - ninja
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - sysroot_linux-64 2.17  # [linux64]
      host:
        - eigen
        # Specify lgpl version of ffmpeg so that there are
        # no quesitons about the license of the resulting opencv
        # binary
        - ffmpeg {{ ffmpeg }}=lgpl_*
        - freetype
        - glib                           # [unix]
        - harfbuzz
        - hdf5
        - jasper
        - libcblas
        - libgomp                        # [linux]
        - libiconv                       # [unix]
        - libjpeg-turbo
        - liblapack
        - liblapacke
        - libpng
        - libprotobuf
        - libtiff
        - libwebp
        - qt-main                        # [not osx and not ppc64le]
        - zlib
    test:
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - pkg-config                    # [not win]
        - cmake
        - ninja
      files:
        - cmake_test/
      commands:
        # Verify dynamic libraries on all systems
        {% set win_ver_lib = version|replace(".", "") %}
        {% set opencv_libs = [
            "alphamat",
            "aruco",
            "bgsegm",
            "calib3d",
            "ccalib",
            "core",
            "datasets",
            "dnn",
            "dnn_objdetect",
            "dnn_superres",
            "dpm",
            "face",
            "features2d",
            "flann",
            "freetype",
            "fuzzy",
            "gapi",
            "hfs",
            "highgui",
            "img_hash",
            "imgcodecs",
            "imgproc",
            "intensity_transform",
            "line_descriptor",
            "mcc",
            "ml",
            "objdetect",
            "optflow",
            "phase_unwrapping",
            "photo",
            "plot",
            "quality",
            "rapid",
            "reg",
            "rgbd",
            "saliency",
            "shape",
            "stereo",
            "stitching",
            "structured_light",
            "superres",
            "surface_matching",
            "text",
            "tracking",
            "video",
            "videoio",
            "videostab",
            "wechat_qrcode",
            "xfeatures2d",
            "ximgproc",
            "xobjdetect",
            "xphoto"
        ] + (not win) * [
            "bioinspired",
            "hdf"
        ]%}
        {% for each_lib in opencv_libs %}
        # presence of shared libs
        - test -f $PREFIX/lib/libopencv_{{ each_lib }}.so                               # [linux]
        - test -f $PREFIX/lib/libopencv_{{ each_lib }}.dylib                            # [osx]
        - if not exist %LIBRARY_BIN%\opencv_{{ each_lib }}{{ win_ver_lib }}.dll exit 1  # [win]

        # absence of static libs
        - test ! -f $PREFIX/lib/libopencv_{{ each_lib }}.a                              # [osx]
        {% endfor %}

        # test that CV_VERSION in headers is set correctly
        - OPENCV_FLAGS=`pkg-config --cflags opencv4`                          # [unix]
        - $CXX -std=c++11 cmake_test/test.cpp ${OPENCV_FLAGS} -o test         # [unix]
        - if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi                # [unix]

        # CMake integration
        - cd cmake_test
        - cmake -G "Ninja" .
        - cmake --build . --config Release

  - name: opencv
    build:
      string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      host:
        # Explicitely add a python requirement so that the hash changes between
        # opencv    for pypy36 and python3.6
        # similarly for pypy37 and python3.7
        - python
      run:
        - {{ pin_subpackage('libopencv', exact=True) }}
        - {{ pin_subpackage('py-opencv', exact=True) }}
    test:
      commands:
        - echo "tested in other outputs"

  - name: py-opencv
    script: build-py.sh   # [unix]
    script: build-py.bat  # [win]
    build:
      string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      run_exports:
        # Should we even have this???
        # don't pin the python version so hard.
        # Actually, I have found pretty good compatibility in the python
        # package
        - {{ pin_subpackage('py-opencv') }}
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - python
        - numpy
        - {{ pin_subpackage('libopencv', exact=True) }}
      run:
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('libopencv', exact=True) }}
    test:
      requires:
        # Run test section against the two main lapack implementatons,
        # depending on python version (cannot have both in one env/test)
        - liblapack * *openblas         # [py%2 == 1]
        - liblapack * *mkl              # [py%2 == 0 and x86_64]
      imports:
        - cv2
        - cv2.xfeatures2d
        - cv2.freetype
      files:
        - run_py_test.py
        - color_palette_alpha.png
        - test_1_c1.jpg
      source_files:
        - test.avi
      commands:
        - python run_py_test.py
        - if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi  # [unix]
        - python -c "import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)"  # [linux]
        - python -c "import cv2, re; assert re.search('Lapack:\s+YES', cv2.getBuildInformation())"
        - pip list
        - test $(pip list | grep opencv-python | wc -l) -eq 1  # [unix]
      requires:
        - pip


about:
  home: https://opencv.org/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Computer vision and machine learning software library.
  dev_url: https://github.com/opencv/opencv
  doc_url: https://docs.opencv.org/{{ major_version }}.x/

extra:
  recipe-maintainers:
    - h-vetinari
    - xhochy
    - jakirkham
    - msarahan
    - patricksnape
    - zym1010
    - hajapy
    - ocefpaf
    - hmaarrfk
  feedstock-name: opencv
