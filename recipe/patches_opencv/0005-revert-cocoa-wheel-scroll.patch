diff --git a/modules/highgui/include/opencv2/highgui.hpp b/modules/highgui/include/opencv2/highgui.hpp
index 71c0cf6e85..32f6dfb25d 100644
--- a/modules/highgui/include/opencv2/highgui.hpp
+++ b/modules/highgui/include/opencv2/highgui.hpp
@@ -504,7 +504,7 @@ left scrolling, respectively.
 
 @note
 
-Mouse-wheel events are currently supported only on Windows and Cocoa
+Mouse-wheel events are currently supported only on Windows.
 
 @param flags The mouse callback flags parameter.
  */
diff --git a/modules/highgui/src/window_cocoa.mm b/modules/highgui/src/window_cocoa.mm
index 86f38d0ae8..2f2ba43149 100644
--- a/modules/highgui/src/window_cocoa.mm
+++ b/modules/highgui/src/window_cocoa.mm
@@ -899,22 +899,8 @@ - (void)cvSendMouseEvent:(NSEvent *)event type:(int)type flags:(int)flags {
     mp.y *= (imageSize.height / std::max(viewSize.height, 1.));
     mp.x *= (imageSize.width / std::max(viewSize.width, 1.));
 
-    if( [event type] == NSEventTypeScrollWheel ) {
-      if( event.hasPreciseScrollingDeltas ) {
-        mp.x = int(event.scrollingDeltaX);
-        mp.y = int(event.scrollingDeltaY);
-      } else {
-        mp.x = int(event.scrollingDeltaX / 0.100006);
-        mp.y = int(event.scrollingDeltaY / 0.100006);
-      }
-      if( mp.x && !mp.y && CV_EVENT_MOUSEWHEEL == type ) {
-        type = CV_EVENT_MOUSEHWHEEL;
-      }
-      mouseCallback(type, mp.x, mp.y, flags, mouseParam);
-    } else if( mp.x >= 0 && mp.y >= 0 && mp.x < imageSize.width && mp.y < imageSize.height ) {
-      mouseCallback(type, mp.x, mp.y, flags, mouseParam);
-    }
-
+    if( mp.x >= 0 && mp.y >= 0 && mp.x < imageSize.width && mp.y < imageSize.height )
+        mouseCallback(type, mp.x, mp.y, flags, mouseParam);
 }
 
 - (void)cvMouseEvent:(NSEvent *)event {
@@ -937,11 +923,6 @@ - (void)cvMouseEvent:(NSEvent *)event {
     if([event type] == NSLeftMouseDragged) {[self cvSendMouseEvent:event type:CV_EVENT_MOUSEMOVE   flags:flags | CV_EVENT_FLAG_LBUTTON];}
     if([event type] == NSRightMouseDragged)	{[self cvSendMouseEvent:event type:CV_EVENT_MOUSEMOVE   flags:flags | CV_EVENT_FLAG_RBUTTON];}
     if([event type] == NSOtherMouseDragged)	{[self cvSendMouseEvent:event type:CV_EVENT_MOUSEMOVE   flags:flags | CV_EVENT_FLAG_MBUTTON];}
-    if([event type] == NSEventTypeScrollWheel) {[self cvSendMouseEvent:event type:CV_EVENT_MOUSEWHEEL   flags:flags ];}
-}
-
--(void)scrollWheel:(NSEvent *)theEvent {
-    [self cvMouseEvent:theEvent];
 }
 - (void)keyDown:(NSEvent *)theEvent {
     //cout << "keyDown" << endl;
